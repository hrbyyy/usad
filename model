class AE(nn.Module):
    def __init__(self, input_dim,latent_dim):
        super(AE, self).__init__()
        self.encoder = nn.Sequential(
            nn.Linear(input_dim, input_dim // 2),
            nn.ReLU(inplace=True),
            nn.Linear(input_dim // 2, input_dim // 4),
            nn.ReLU(inplace=True),
            nn.Linear(input_dim // 4, latent_dim),
            nn.ReLU(inplace=True)
        )
        self.decoder = nn.Sequential(
            nn.Linear(latent_dim, input_dim // 4),
            nn.ReLU(inplace=True),
            nn.Linear(input_dim // 4, input_dim // 2),
            nn.ReLU(inplace=True),
            nn.Linear(input_dim // 2, input_dim),
            nn.Sigmoid()
        )

    def forward(self, temporal_x):
      
        b, f, t = temporal_x.shape
        x = temporal_x.view(b, -1)
        z = self.encoder(x)
        x_rec0 = self.decoder(z)
        x_rec = x_rec0.view(b, f, t)
      
        return x_rec  
